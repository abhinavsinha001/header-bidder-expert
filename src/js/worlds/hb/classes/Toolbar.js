'use strict';

import $ from 'jquery';

/**
 * Manager for the "toolbar" section
 */
export default class Toolbar {
    // Events generated by the toolbar
    static get EVENT_ZOOM_CHANGED() {
        return 'zoom-changed';
    }

    constructor(selector) {
        this._selector = selector;

        // Properties
        this._zoomLevel = null;
        this._minZoomLevel = null;
        this._maxZoomLevel = null;
    }

    /**
     * Initialize the object and setup all the events
     */
    run(zoomLevel, minZoomLevel, maxZoomLevel) {
        this._zoomLevel = zoomLevel;
        this._minZoomLevel = minZoomLevel;
        this._maxZoomLevel = maxZoomLevel;

        this._updateZoomButtons();

        this._listenEvents();
    }

    /**
     * Enable/disable zoom buttons depending on the current zoon index
     */
    _updateZoomButtons() {
        // Zoom in
        const zoomInEnabled = this._zoomLevel > this._minZoomLevel;
        const $zoomIn = $(this._selector + ' #tool-zoom-in');
        if (zoomInEnabled) {
            this._removeClass($zoomIn.get(0), 'disabled');
        } else {
            this._addClass($zoomIn.get(0), 'disabled');
        }

        // Zoom out
        const zoomOutEnabled = this._zoomLevel < this._maxZoomLevel;
        const $zoomOut = $(this._selector + ' #tool-zoom-out');
        if (zoomOutEnabled) {
            this._removeClass($zoomOut.get(0), 'disabled');
        } else {
            this._addClass($zoomOut.get(0), 'disabled');
        }
    }

    /**
     * Remove class from an SVG element.
     * Note: jQuery's class functions do not work on SVG.
     */
    _removeClass(node, className) {
        const classString = $(node).attr('class');
        const classes = classString.split(' ');
        const newClasses = [];
        classes.forEach(item => {
            item = $.trim(item);
            if (item !== className) {
                newClasses.push(item);
            }
        });
        $(node).attr('class', newClasses.join(' '));
    }

    /**
     * Add class to an SVG element.
     * Note: jQuery's class functions do not work on SVG.
     */
    _addClass(node, className) {
        const classString = $(node).attr('class');
        const classes = classString.split(' ');

        let already = false;
        $.each(classes, (index, item) => {
            item = $.trim(item);
            if (item === className) {
                already = true;
                return false; // break
            }
        });

        if (already) {
            return;
        }

        classes.push(className);
        $(node).attr('class', classes.join(' '));
    }

    /**
     * Listen for the onclick events
     */
    _listenEvents() {
        $(this._selector + ' #tool-zoom-in')
            .on('click', this._onZoomClick.bind(this, -1));
        $(this._selector + ' #tool-zoom-out')
            .on('click', this._onZoomClick.bind(this, 1));
    }

    /**
     * User wants to zoom in or out
     */
    _onZoomClick(increment, event) {
        event.preventDefault(); // Disable double click text selection

        const newZoomLevel = this._zoomLevel + increment;
        if (newZoomLevel < this._minZoomLevel) {
            return;
        }
        if (newZoomLevel > this._maxZoomLevel) {
            return;
        }

        // Update zoom level
        this._zoomLevel = newZoomLevel;
        this._updateZoomButtons();

        // Trigger the event that zoom level has increased
        $(this).trigger(Toolbar.EVENT_ZOOM_CHANGED, this._zoomLevel);
    }
}
